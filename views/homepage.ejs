<!-- Default home page -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/q.js/1.4.1/q.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/spark-md5/2.0.2/spark-md5.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<link href='http://fonts.googleapis.com/css?family=Open+Sans:400italic,600' rel='stylesheet' type='text/css'>
<style>
  /* Styles included inline since you'll probably be deleting this page anyway */
  html,body{text-align:left;font-size:1em}html,body,img,form,textarea,input,fieldset,div,p,div,ul,li,ol,dl,dt,dd,h1,h2,h3,h4,h5,h6,pre,code{margin:0;padding:0}ul,li{list-style:none}img{display:block}a img{border:0}a{text-decoration:none;font-weight:normal;font-family:inherit}*:active,*:focus{outline:0;-moz-outline-style:none}h1,h2,h3,h4,h5,h6{font-weight:normal}div.clear{clear:both}.clearfix:after{clear:both;content:".";display:block;font-size:0;height:0;line-height:0;visibility:hidden}body{font-family:"Open Sans",Arial,sans-serif;font-weight:300;}.top-bar {width: 100%; background-color: #e4f0f1; padding: 15px 0;}.top-bar .container img {float: left;}.top-bar .container ul {float: right; padding-top: 25px;}.top-bar .container li {float: left; width: 125px; text-align: center; font-size: 15px; color:#000; font-weight: 600;}.top-bar .container a li:hover {color: #118798; -webkit-transition:color 200ms; -moz-transition:color 200ms; -o-transition:color 200ms;transition:color 200ms;}.container{width: 80%; max-width: 1200px; margin: auto;}div.header {-webkit-transition: 6s; -moz-transition: 6s; -o-transition: 6s;transition: 6s; background: rgba(4, 36, 41, 0.89) url(http://sailsjs.org/images/img_sailsShadow.png) no-repeat 42% bottom; padding: 100px 0 65px;}.header h1#main-title{color: #fff; font-weight: 300; font-size: 2.5em;}.header h3{color: #b1eef7; font-style: italic; font-weight: 300;}.header h3 code{font-style: normal!important; background-color: rgba(255,255,255,0.5); font-weight: 300; color:#0e6471; margin: 0px 5px;}div.main.container{padding: 50px 0;}h1 {color: #118798; font-weight: 300;}code {font-size: inherit; font-family: 'Consolas', 'Monaco', monospace; padding:4px 5px 1px; background-color: #f3f5f7}a{color: #118798; font-weight: 300; text-decoration: underline;}a:hover {color: #0e6471; -webkit-transition:color 200ms; -moz-transition:color 200ms; -o-transition:color 200ms;transition:color 200ms;}p{line-height: 1.5em;}blockquote{background-color: #e4f0f1; padding: 25px; line-height: 1.5em; margin: 15px 0;}blockquote span{font-weight: 600; padding-right: 5px;}ul.getting-started{padding: 25px 75px 25px 0; width: 70%; float: left; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;}ul.getting-started li{padding: 25px 0;}ul.getting-started li h3 {padding-bottom: 10px; font-size: 25px; font-weight: 300;}.sprite{background:url(http://sailsjs.org/images/newapp.sprite.png) no-repeat; position: absolute; left: 0; top:0;}.getting-started .sprite{margin-left:10px;padding-left:60px;height:42px;width:0; float: left;}.getting-started .one{background-position:0 0}.getting-started .two{background-position:0 -42px}.getting-started .three{background-position:0 -83px}div.step {position: relative; padding-left: 70px; opacity: 0.9;}div.step:hover{ opacity: 1;}div.links {float: left; width: 30%; max-width: 325px; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; background-color: #f3f5f7; border: 1px solid #ebebeb; padding: 25px 45px 35px;}div.links h3 {color: #727272; text-align: center; font-size: 28px; font-weight: 300;}div.links h4 {color: #727272; font-size: 17px; font-weight: 600; padding: 15px 0 10px;}div.links .link-list a {text-decoration: none; font-weight: 400;}div.links .link-list a li {padding: 0px 0px 5px 10px;}div.default-page{min-width: 1200px;}.pocket{display:none;}
</style>

<!--<div class="container">

  <h1>Coursetro Instructor</h1>

  <h2 id="instructor"></h2>

  <label for="name" class="col-lg-2 control-label">Instructor Name</label>
  <input id="name" type="text">

  <label for="name" class="col-lg-2 control-label">Instructor Age</label>
  <input id="age" type="text">

  <button id="button">Update Instructor</button>


</div>-->
<br>
<br>

<div class="row">
    <div class="col-sm-4">
      <h2 id="instructor"></h2>
    </div>

    <div class="col-sm-2">
      <input type="file" id="file"/>

    </div>
  <div class="col-sm-2">
    <input type="button" onclick="calculate();" value="Upload" class="btn primary" />

  </div>
</div>

<br>
<label for="index" class="col-lg-2 control-label">Index</label>
<input id="index" type="text">
<button id="button">Get hash at index</button>

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>

<script type="text/javascript">


  if(typeof web3 !== 'undefined'){
    // Use injected web3
    web3js = new Web3(web3.currentProvider);
  } else {
    /* Fallback to local node or remote node
       by default local HTTP-RPC server exposes port 8545.
       you can use Infura Node Urls also
       'https://ropsten.infura.io/<API KEy>'*/

    web3js = new Web3(new Web3.providers.HttpProvider('http://127.0.0.1:8545'));
  }

  web3.eth.defaultAccount = web3.eth.accounts[0];
  var contractInfo = JSON.parse('{"contract_name": "FileDetail","abi":[{"constant":false,"inputs":[{"name":"fName","type":"string"},{"name":"fileHash","type":"string"}],"name":"setFile","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getFile","outputs":[{"name":"fileName","type":"string"},{"name":"fileHash","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}]  }');
  var CoursetroContract = web3.eth.contract(contractInfo.abi)
  var Coursetro = CoursetroContract.at('0x830954070ca0051eb6941314158c0a65cf756296');
  console.log(Coursetro);

  $("#button").click(function() {
    Coursetro.getFile($('#index').val(),function(error, result){
      if(!error)
      {
        $("#instructor").html(result[0]+': '+result[1]);
        console.log(result);
      }
      else
        console.error(error);
    });

  });

  function calculateMD5Hash(file, bufferSize) {
    var def = Q.defer();

    var fileReader = new FileReader();
    var fileSlicer = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;
    var hashAlgorithm = new SparkMD5();
    var totalParts = Math.ceil(file.size / bufferSize);
    var currentPart = 0;
    var startTime = new Date().getTime();

    fileReader.onload = function(e) {
      currentPart += 1;

      def.notify({
        currentPart: currentPart,
        totalParts: totalParts
      });

      var buffer = e.target.result;
      hashAlgorithm.appendBinary(buffer);

      if (currentPart < totalParts) {
        processNextPart();
        return;
      }

      def.resolve({
        hashResult: hashAlgorithm.end(),
        duration: new Date().getTime() - startTime
      });
    };

    fileReader.onerror = function(e) {
      def.reject(e);
    };

    function processNextPart() {
      var start = currentPart * bufferSize;
      var end = Math.min(start + bufferSize, file.size);
      fileReader.readAsBinaryString(fileSlicer.call(file, start, end));
    }

    processNextPart();
    return def.promise;
  }

  function calculate() {

    var input = document.getElementById('file');
    if (!input.files.length) {
      return;
    }

    var file = input.files[0];
    var bufferSize = Math.pow(1024, 2) * 10; // 10MB

    calculateMD5Hash(file, bufferSize).then(
      function(result) {
        // Success
        console.log(result);
        console.log(file.name);
        console.log(result.hashResult);
        Coursetro.setFile(file.name,result.hashResult,function(error, result){
          if(!error)
          {
            console.log("Transaction submitted");
          }
          else{
            console.log("Error");
          }
        });
      },
      function(err) {
        // There was an error,
      },
      function(progress) {
        // We get notified of the progress as it is executed
        console.log(progress.currentPart, 'of', progress.totalParts, 'Total bytes:', progress.currentPart * bufferSize, 'of', progress.totalParts * bufferSize);
      });
  }


</script>
